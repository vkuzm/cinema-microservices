version: '3.1'

services:

  # Proxy
  nginx-proxy:
    build:
      dockerfile: Dockerfile
      context: ./nginx-proxy
    restart: on-failure
    ports:
      - 8080:80

  # Client service
  client-service:
    build:
      dockerfile: Dockerfile.dev
      context: ./cinema-client
    restart: on-failure

  # Users service
  users-service:
    build:
      dockerfile: Dockerfile
      context: ./users-service
    restart: on-failure  
    volumes:
      - /app/node_modules
      - ./users-service:/app
    depends_on:
      - mongo-users
      - redis-users
    environment:
       SERVER_PORT: 8081
       MONGO_URI: mongodb://mongo-users:27017
       REDIS_URI: redis://redis-users:6379
    #ports:
      #- 9229:9229 #debug port
      #- 8081:8081 #app port

  # Cinema service
  cinema-service:
   build:
     dockerfile: Dockerfile
     context: ./cinema-service
   restart: on-failure
   depends_on:
     - rabbitmq
   environment:
     SERVER_PORT: 8082
     MONGO_URL: mongo-cinema
     MONGO_PORT: 27017
     SPRING_RABBITMQ_HOST: rabbitmq
     API_KEY: '' #TMDB API KEY

  # Booking service
  booking-service:
    build:
      dockerfile: Dockerfile
      context: ./booking-service
    restart: on-failure  
    volumes:
      - /app/node_modules
      - ./booking-service:/app
    depends_on:
      - rabbitmq
      - postgres-booking
    environment:
       SERVER_PORT: 8083
       RABBITMQ_URI: amqp://rabbitmq:5672
       POSTGRES_URI: postgres://admin:password@postgres-booking:5432/booking
    ports:
      - 9229:9229 #debug port
      - 8083:8083 #app port

  # Users service MongoDB
  mongo-users:
    container_name: mongo-users
    image: mongo:4.4.2
    restart: on-failure
    volumes:
      - ./users-service/data:/data/db

  # Cinema service MongoDB
  mongo-cinema:
    container_name: mongo-cinema
    image: mongo:4.4.2
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rootpassword
    restart: on-failure
    volumes:
      - ./cinema-service/data:/data/db
    ports:
      - 27017:27017 # dev purpose

  # Booking service postgress
  postgres-booking:
    build:
      dockerfile: Dockerfile
      context: ./booking-service/database
    container_name: postgres-booking
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      POSTGRES_URL: postgres://admin:password@localhost:5432/booking
      POSTGRES_DB: booking
      POSTGRES_HOST: postgres
    volumes:
      - ./booking-service/database/data:/var/lib/postgresql/data
    ports:
      - 5432:5432 # dev purpose

  # Users service Redis
  redis-users:
    image: redis:6.0.9
    restart: on-failure

  # Rabbit MQ
  rabbitmq:
    image: rabbitmq:3.8.11-management
    restart: on-failure
    container_name: rabbitmq
    volumes:
      - ./rabbitmq/data:/var/lib/rabbitmq
    ports:
      - 5672:5672 # dev purpose
      - 15672:15672

  # Tools
#  mongo-express:
#    image: mongo-express:0.54.0
#    restart: "no"
#    ports:
#      - 9999:8081
#    environment:
#      ME_CONFIG_MONGODB_SERVER: mongo-cinema